---
layout: post
title:  "GitHub Pages 教程"
date:   2023-04-23 20:30:18 +0800
categories: jekyll update
---

## 注册GitHub账号

### 注册GitHub

### GitHub Pages的用户站点

若要发布用户站点，必须要先建立仓库（repository），仓库名**必须**与用户名保持一致，即`<username>.github.io`。

站点的原文件与项目存储在同一个仓库中，用户站点为`http(s)://<username>.github.io/<repository>`

### 创建仓库

- 登录github，在任何页面右上角点击`+`下拉菜单选择新建存储库

  <img src="./2023-04-23-jekyll.assets/创建仓库.png" alt="创建仓库" style="zoom:50%;" align='left' />

- 设置`owner`和`repository name`，注意存储库命名必须是`<username>.github.io`

- （可选）填写仓库说明`Description`

- 选择仓库可见性

- 勾选“使用README初始化此存储库”

- 完成设置后，点击`Create repository`

### 创建站点

- 在github上导航到已经创建好的仓库，点击`Settings`确定站点要使用的发布源。

  ![image-20230426175813407](./2023-04-23-jekyll.assets/image-20230426175813407.png)

- 在`Code and automaton`部分，选择`pages`

- 如果要查看已经发布的网站，可以选择`visit site`

- 另外可以通过`add a Jekyll theme`和`choose a theme`添加和选择自己喜欢的模板

  ![image-20230426203512705](./2023-04-23-jekyll.assets/image-20230426203512705.png)

### 配置发布源

- 同样是在`pages`页面`branch`下，选择`deploy from a branch`，在`branch`下，使用`none`或从下拉菜单选择发布源

  ![image-20230426205510954](./2023-04-23-jekyll.assets/image-20230426205510954.png)

> 如果不喜欢以上模板，可以通过Jekyll生成

## 使用Jekyll设置站点

### 事先准备

- **Ruby**，需要2.5.0或以上版本，可以通过`ruby -v`检查当前的ruby版本
- **RubyGems**，可以通过`gem -v`检查当前版本
- **GCC**和**Make**，可以分别通过`gcc -v`、`g++ -v`和`make -v`来检查安装的版本

### 安装Git

> Mac系统可以不用安装，官方推荐参考方法
>
> > http://jekyllcn.com/docs/installation/
> >
> > https://jekyllrb.com/docs/installation/macos/
> >
> > https://www.moncefbelyamani.com/how-to-install-xcode-homebrew-git-rvm-ruby-on-mac/

1. 安装homebrew 

   ```shell
   /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
   ```

   ```shell
   #更新homebrew到最新版本
   $ brew update && brew doctor
   ```

   <img src="./2023-04-23-jekyll.assets/image-20230426224022724.png" alt="image-20230426224022724" style="zoom:25%;" align='left'/>

2. 使用homebrew安装git

   ```shell
   #安装最新版git
   $brew install git
   #查看homebrew已安装内容
   $brew list
   ```
   
   <img src="./2023-04-23-jekyll.assets/image-20230422120459120.png" alt="image-20230422120459120" style="zoom:25%;" align='left'/>
   
   <img src="./2023-04-23-jekyll.assets/image-20230422145639355.png" alt="image-20230422145639355" style="zoom:25%;" align='left' />
   
   <img src="./2023-04-23-jekyll.assets/image-20230422121548815.png" alt="image-20230422121548815" style="zoom:25%;" align='left'/>

### 通过chruby安装Ruby

```shell
#通过homebrew安装chruby和ruby-install
$ brew install chruby ruby-install xz
#安装最新的ruby稳定版本
$ ruby-install ruby 3.1.3
# 设置shell自动使用chruby命令
$ echo "source $(brew --prefix)/opt/chruby/share/chruby/chruby.sh" >> ~/.zshrc
$ echo "source $(brew --prefix)/opt/chruby/share/chruby/auto.sh" >> ~/.zshrc
$ echo "chruby ruby-3.1.3" >> ~/.zshrc # run 'chruby' to see actual version
```

完成上面的命令后，重新登录terminal，通过`ruby -v`检查是否已经安装好ruby

<img src="./2023-04-23-jekyll.assets/image-20230426221832738.png" alt="image-20230426221832738" style="zoom:25%;" align='left'/>

```shell
#设置shell
$ echo "source $(brew --prefix)/opt/chruby/share/chruby/chruby.sh" >> ~/.zshrc
$ echo "source $(brew --prefix)/opt/chruby/share/chruby/auto.sh" >> ~/.zshrc
$ echo "chruby ruby-3.1.3" >> ~/.zshrc
```

完成上面的命令后，重新登录terminal，通过`ruby -v`检查是否已经安装好ruby

### 安装GEM

1. 下载最新版本的安装文件 https://rubygems.org/pages/download#formats

2. 解压缩文件，通过`cd`命令进入文件夹

3. 通过`ruby setup.rb`命令安装

   ```shell
   #获取帮助
   $ ruby setup.rb --help
   ```

### 安装Jekyll&Bundler

```shell
# 使用 gem 安装 jekyll 和 bundler
$ gem install jekyll bundler
# 或者
$ gem install jekyll bundler --user-install
# 或者
$ sudo gem install jekyll
```

<img src="/Users/hazel/Library/Application Support/typora-user-images/image-20230422140030542.png" alt="image-20230422140030542" style="zoom:25%;" align='left'/>

### 本地测试站点

1. 打开终端

2. 导航到保存博客的文件夹，PARENT-FOLDER 替换为要包含存储库文件夹的文件夹

   ```shell
   #进入本地目录
   $ cd /Users/hazel/Documents/GitHub
   ```

3. 初始化本地仓库

   ```shell
   # 创建一个新文件夹，初始化为Git存储库
   $ git init lihua-zhang.github.io
   ```

4. 将目录更改为仓库

   ```shell
   $ cd lihua-zhang.github.io
   
   # 合并成一个 
   $ cd /Users/hazel/Documents/GitHub/lihua-zhang.github.io
   ```

5. 编辑jekyll创建的gemfile文件

   - 讲#添加到以`gem "jekyll"`开头的行首，以注释禁止此行

   - 编辑以`# gem "github-pages"`开头的行，以添加`github-pages`gem。将此行更改为

     ```shell
     shell `gem "github-pages", "~> GITHUB-PAGES-VERSION", group: :jekyll_plugins
     ```

     其中 GITHUB-PAGES-VERSION （目前最新的是228）为最新支持的版本，通过这里查看https://pages.github.com/versions/

   - 保存并关闭gemfile

6. 从命令行中，运行`bundle install`

   ```shell
   #如果安装特别慢就先运行这一行
   bundle config mirror.https://rubygems.org https://gems.ruby-china.com
   #安装bundle
   bundle install
   ```

   ```SHELL
   # 改用Ruby国内源
   # 移除官方镜像源.
   gem sources --remove https://rubygems.org/
   # 添加国内源ruby-china。
   gem sources -a https://gems.ruby-china.com/
   # 确保只有一个镜像源。
   gem sources -l
   ```

   

7. 在本地运行jekyll站点

   ```shell
   $ bundle exec jekyll serve
   > Configuration file: /Users/octocat/my-site/_config.yml
   >            Source: /Users/octocat/my-site
   >       Destination: /Users/octocat/my-site/_site
   > Incremental build: disabled. Enable with --incremental
   >      Generating...
   >                    done in 0.309 seconds.
   > Auto-regeneration: enabled for '/Users/octocat/my-site'
   > Configuration file: /Users/octocat/my-site/_config.yml
   >    Server address: http://127.0.0.1:4000/
   >  Server running... press ctrl-c to stop.
   ```

   > 注意：如果已安装 Ruby 3.0 或更高版本（如果通过 Homebrew 安装了默认版本，则表示可能已经安装），你可能会在此步骤中遇到错误。 这是因为这些版本的 Ruby 不再附带安装 `webrick`。
   >
   > 要修复错误，请尝试运行 `bundle add webrick`，然后重新运行 `bundle exec jekyll serve`。

   ```shell
   $ jekyll serve --detach
   # => 功能和`jekyll serve`命令相同，但是会脱离终端在后台运行。
   #    如果你想关闭服务器，可以使用`kill -9 1234`命令，"1234" 是进程号（PID）。
   #    如果你找不到进程号，那么就用`ps aux | grep jekyll`命令来查看，然后关闭服务器。[更多](http://unixhelp.ed.ac.uk/shell/jobz5.html).
   ```

   ```shell
   $ bundle exec jekyll serve --detach
   # 如果想要自动结束本地监测，需要记住最后一行结束端口占用的命令提示，即 
   > Run `pkill -f jekyll' or `kill -9 85686' to stop the server.
   ```

   <img src="../../../../Library/Application Support/typora-user-images/image-20230427011708877.png" alt="image-20230427011708877" style="zoom:50%;" align='left'/>

8. 如果要预览网站，需要在浏览器中打开http://localhost:4000

##  参考资料

1. [https://jekyllcn.com/](https://jekyllcn.com/ "https://jekyllcn.com/") 

2. https://docs.github.com/zh/pages/setting-up-a-github-pages-site-with-jekyll/testing-your-github-pages-site-locally-with-jekyll

3. https://www.sxbfzl.com/b/5266.html

4. 新建文件夹`mkdir docs`

   


### 错误解决

1. 如果进行本地站点测试的时候出现以下结果

   ```shell
   This error message indicates that there is already a process or application listening on port 4000 on the localhost (127.0.0.1) IP address, so the socket cannot be bound to this address and port.
   ```

   表示本地端口被占用，可以通过以下方式解决占用

   ```shell
   # 查看有哪些被占用的窗口（PID)
   $ lsof -i :4000
   # 在输出的结果中确认pid号码，结束进程
   $ kill PID
   ```

   





